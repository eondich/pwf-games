{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  const _component_CharacterGeneratorRollerNew = _resolveComponent(\"CharacterGeneratorRollerNew\");\n  const _component_CharacterCardNew = _resolveComponent(\"CharacterCardNew\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_CharacterGeneratorRollerNew, {\n    gameSystemName: _ctx.gameSystem.value?.name,\n    loading: _ctx.loading,\n    dropdownOptions: _ctx.dropdownOptions,\n    generatorDropdownOptions: _ctx.generatorDropdownOptions,\n    onRollCharacter: _cache[0] || (_cache[0] = $event => _ctx.rollNewCharacter()),\n    onSetNameStyle: _cache[1] || (_cache[1] = e => _ctx.generatorSelectedOptions.nameStyle = e),\n    onSetNameGender: _cache[2] || (_cache[2] = e => _ctx.generatorSelectedOptions.nameGender = e),\n    onSetAncestry: _cache[3] || (_cache[3] = e => _ctx.selectAncestry(e)),\n    onSetClass: _cache[4] || (_cache[4] = e => _ctx.selectCharacterClass(e)),\n    onSetBackground: _cache[5] || (_cache[5] = e => _ctx.generatorSelectedOptions.background = e),\n    onSetLineage: _cache[6] || (_cache[6] = e => _ctx.generatorSelectedOptions.lineage = e),\n    onSetSubclass: _cache[7] || (_cache[7] = e => _ctx.generatorSelectedOptions.characterSubclass = e),\n    onSetAppearance: _cache[8] || (_cache[8] = e => _ctx.generatorSelectedOptions.appearance = e)\n  }, null, 8 /* PROPS */, [\"gameSystemName\", \"loading\", \"dropdownOptions\", \"generatorDropdownOptions\"]), _createVNode(_component_CharacterCardNew, {\n    dropdownOptions: _ctx.dropdownOptions,\n    cardDropdownOptions: _ctx.cardDropdownOptions,\n    generatorSelectedOptions: _ctx.generatorSelectedOptions,\n    selectedOptions: _ctx.cardSelectedOptions,\n    loading: _ctx.loading\n  }, null, 8 /* PROPS */, [\"dropdownOptions\", \"cardDropdownOptions\", \"generatorSelectedOptions\", \"selectedOptions\", \"loading\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createVNode","_component_CharacterGeneratorRollerNew","gameSystemName","_ctx","gameSystem","value","name","loading","dropdownOptions","generatorDropdownOptions","onRollCharacter","_cache","$event","rollNewCharacter","onSetNameStyle","e","generatorSelectedOptions","nameStyle","onSetNameGender","nameGender","onSetAncestry","selectAncestry","onSetClass","selectCharacterClass","onSetBackground","background","onSetLineage","lineage","onSetSubclass","characterSubclass","onSetAppearance","appearance","_component_CharacterCardNew","cardDropdownOptions","selectedOptions","cardSelectedOptions"],"sources":["/Users/lappy486/Code/pwf-games/src/components/CharacterGenerators/CharacterGeneratorNew.vue"],"sourcesContent":["<template>\n  <CharacterGeneratorRollerNew :gameSystemName=\"gameSystem.value?.name\"\n                               :loading=\"loading\"\n                               :dropdownOptions=\"dropdownOptions\"\n                               :generatorDropdownOptions=\"generatorDropdownOptions\"\n                               @rollCharacter=\"rollNewCharacter()\"\n                               @setNameStyle=\"e => generatorSelectedOptions.nameStyle = e\"\n                               @setNameGender=\"e => generatorSelectedOptions.nameGender = e\"\n                               @setAncestry=\"e => selectAncestry(e)\" \n                               @setClass=\"e => selectCharacterClass(e)\" \n                               @setBackground=\"e => generatorSelectedOptions.background = e\" \n                               @setLineage=\"e => generatorSelectedOptions.lineage = e\" \n                               @setSubclass=\"e => generatorSelectedOptions.characterSubclass = e\" \n                               @setAppearance=\"e => generatorSelectedOptions.appearance = e\" />\n  <CharacterCardNew :dropdownOptions=\"dropdownOptions\"\n                    :cardDropdownOptions=\"cardDropdownOptions\"\n                    :generatorSelectedOptions=\"generatorSelectedOptions\"\n                    :selectedOptions=\"cardSelectedOptions\"\n                    :loading=\"loading\" />\n</template>\n\n<script setup>\nimport { ref, reactive } from 'vue'\n\nimport CharacterGeneratorRollerNew from './CharacterGeneratorRollerNew.vue';\nimport CharacterCardNew from '../Cards/CharacterCardNew.vue';\n\nconst props = defineProps({\n  gameSystemKey: String\n});\n\nconst loading = ref(true);\nconst baseUrl = 'http://localhost:3000/api/v1/character_generator';\nconst gameSystem = reactive({});\nconst dropdownOptions = reactive({});\n\n// Move into api file?\nfunction fetchBaseData () {\n  fetch(`${baseUrl}/base_data/${gameSystem.value.id}`, {\n    method: 'get'\n  }).then((res) => {\n    return res.json();\n  }).then((res) => {\n    dropdownOptions.value = {\n      ancestries: res.ancestries || [],\n      characterClasses: res.player_classes || [],\n      nameGenders: res.gender_options || [],\n      nameStyles: res.name_styles || [],\n      backgrounds: res.backgrounds || [],\n      appearances: res.appearances || []\n    }\n  });\n  loading.value = false;\n}\n\nfetch(`${baseUrl}/game_system/${props.gameSystemKey}`, {\n  method: 'get'\n}).then((res) => {\n  return res.json();\n}).then((res) => {\n  gameSystem.value = res.game_system;\n  fetchBaseData();\n});\n\nconst baseOptions = {\n  ancestry: null,\n  appearance: null,\n  background: null,\n  characterClass: null\n};\nconst subOptions = {\n  lineage: null,\n  characterSubclass: null\n};\nconst generatorSpecific = {\n  nameGender: 'any',\n  nameStyle: null\n};\n\n// Generator data\nconst generatorSelectedOptions = reactive({\n  ...baseOptions,\n  ...subOptions,\n  ...generatorSpecific\n});\n\nconst generatorDropdownOptions = reactive({\n  characterSubclasses: [],\n  lineages: []\n});\n\n// Card data\nconst cardSelectedOptions = reactive({\n  ...baseOptions,\n  ...subOptions\n});\n\nconst cardDropdownOptions = reactive({\n  characterSubclasses: [],\n  lineages: []\n});\n\n// Fetch data as selections change\nfunction fetchLineages (ancestryId) {\n  return fetch(`${baseUrl}/lineages/${gameSystem.value.id}/${ancestryId}`, {\n    method: 'get'\n  }).then((res) => {\n    return res.json();\n  }).then((res) => {\n    return res.lineages;\n  });\n}\n\nfunction fetchCharacterSubclasses (characterClassId) {\n  return fetch(`${baseUrl}/player_subclasses/${gameSystem.value.id}/${characterClassId}`, {\n    method: 'get'\n  }).then((res) => {\n    return res.json();\n  }).then((res) => {\n    return res.player_subclasses;\n  });\n}\n\n// Update data\nfunction selectAncestry (newAncestry) {\n  generatorSelectedOptions.ancestry = newAncestry;\n  fetchLineages(newAncestry).then(res => {\n    generatorDropdownOptions.lineages = res;\n  });\n}\n\nfunction selectCharacterClass (newCharacterClass) {\n  generatorSelectedOptions.characterClass = newCharacterClass;\n  fetchCharacterSubclasses(newCharacterClass).then(res => {\n    generatorDropdownOptions.characterSubclasses = res;\n  });\n}\n\n// Character generation\nfunction generateAncestry () {\n  const ancestryIndex = Math.floor(Math.random() * dropdownOptions.value.ancestries.length);\n  const ancestryId = dropdownOptions.value.ancestries[ancestryIndex].id;\n  generateLineage(ancestryId)l\n  return ancestryId;\n}\n\nfunction generateAppearance () {\n  const appearanceIndex = Math.floor(Math.random() * (dropdownOptions.value.appearances.length));\n  return dropdownOptions.value.appearances[appearanceIndex].id;\n}\n\nfunction generateBackground () {\n  const backgroundIndex = Math.floor(Math.random() * (dropdownOptions.value.backgrounds.length));\n  return dropdownOptions.value.backgrounds[backgroundIndex].id;\n}\n\nfunction generateCharacterClass () {\n  const characterClassIndex = Math.floor(Math.random() * dropdownOptions.value.characterClasses.length);\n  const newClassId = dropdownOptions.value.characterClasses[characterClassIndex].id;\n  generateCharacterSubclass(newClassId);\n  return newClassId;\n}\n\nfunction generateCharacterSubclass (characterClassId) {\n  fetchCharacterSubclasses(characterClassId).then(res => {\n    cardDropdownOptions.characterSubclasses = res;\n    const subclassIndex = Math.floor(Math.random() * cardDropdownOptions.characterSubclasses.length);\n    cardSelectedOptions.characterSubclass = cardDropdownOptions.characterSubclasses[subclassIndex];\n  });\n}\n\nfunction generateLineage (ancestryId) {\n  fetchLineages(ancestryId).then(res => {\n    cardDropdownOptions.lineages = res;\n    const lineageIndex = Math.floor(Math.random() * cardDropdownOptions.lineages.length);\n    cardSelectedOptions.lineage = cardDropdownOptions.lineages[lineageIndex];\n  });\n}\n\nfunction rollNewCharacter () {\n  Object.keys(baseOptions).forEach(key => {\n    if (generatorSelectedOptions[key] && generatorSelectedOptions[key] !== cardSelectedOptions[key]) {\n      cardSelectedOptions[key] = generatorSelectedOptions[key];\n    }\n    else {\n      switch (key) {\n        case 'ancestry':\n          cardSelectedOptions[key] = generateAncestry();\n          break;\n        case 'appearance':\n          cardSelectedOptions[key] = generateAppearance();\n          break;\n        case 'background':\n          cardSelectedOptions[key] = generateBackground();\n          break;\n        case 'characterClass':\n          cardSelectedOptions[key] = generateCharacterClass();\n          break;\n        default:\n          break;\n      }\n    }\n  });\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"./CharacterGeneratorPage.scss\";\n</style>\n"],"mappings":";;;;6DACEA,YAAA,CAY6FC,sCAAA;IAZ/DC,cAAc,EAAEC,IAAA,CAAAC,UAAU,CAACC,KAAK,EAAEC,IAAI;IACtCC,OAAO,EAAEJ,IAAA,CAAAI,OAAO;IAChBC,eAAe,EAAEL,IAAA,CAAAK,eAAe;IAChCC,wBAAwB,EAAEN,IAAA,CAAAM,wBAAwB;IAClDC,eAAa,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAET,IAAA,CAAAU,gBAAgB;IAC/BC,cAAY,EAAAH,MAAA,QAAAA,MAAA,MAAEI,CAAC,IAAIZ,IAAA,CAAAa,wBAAwB,CAACC,SAAS,GAAGF,CAAC;IACzDG,eAAa,EAAAP,MAAA,QAAAA,MAAA,MAAEI,CAAC,IAAIZ,IAAA,CAAAa,wBAAwB,CAACG,UAAU,GAAGJ,CAAC;IAC3DK,aAAW,EAAAT,MAAA,QAAAA,MAAA,MAAEI,CAAC,IAAIZ,IAAA,CAAAkB,cAAc,CAACN,CAAC;IAClCO,UAAQ,EAAAX,MAAA,QAAAA,MAAA,MAAEI,CAAC,IAAIZ,IAAA,CAAAoB,oBAAoB,CAACR,CAAC;IACrCS,eAAa,EAAAb,MAAA,QAAAA,MAAA,MAAEI,CAAC,IAAIZ,IAAA,CAAAa,wBAAwB,CAACS,UAAU,GAAGV,CAAC;IAC3DW,YAAU,EAAAf,MAAA,QAAAA,MAAA,MAAEI,CAAC,IAAIZ,IAAA,CAAAa,wBAAwB,CAACW,OAAO,GAAGZ,CAAC;IACrDa,aAAW,EAAAjB,MAAA,QAAAA,MAAA,MAAEI,CAAC,IAAIZ,IAAA,CAAAa,wBAAwB,CAACa,iBAAiB,GAAGd,CAAC;IAChEe,eAAa,EAAAnB,MAAA,QAAAA,MAAA,MAAEI,CAAC,IAAIZ,IAAA,CAAAa,wBAAwB,CAACe,UAAU,GAAGhB,CAAC;yGACzFf,YAAA,CAIuCgC,2BAAA;IAJpBxB,eAAe,EAAEL,IAAA,CAAAK,eAAe;IAChCyB,mBAAmB,EAAE9B,IAAA,CAAA8B,mBAAmB;IACxCjB,wBAAwB,EAAEb,IAAA,CAAAa,wBAAwB;IAClDkB,eAAe,EAAE/B,IAAA,CAAAgC,mBAAmB;IACpC5B,OAAO,EAAEJ,IAAA,CAAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}
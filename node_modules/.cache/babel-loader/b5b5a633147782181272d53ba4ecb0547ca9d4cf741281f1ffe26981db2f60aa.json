{"ast":null,"code":"/* eslint-disable */\nimport { ref } from 'vue';\nimport CharacterCard from \"../Cards/CharacterCard\";\nimport CharacterGeneratorRoller from \"./CharacterGeneratorRoller\";\nexport default {\n  components: {\n    CharacterCard,\n    CharacterGeneratorRoller\n  },\n  props: {\n    gameSystemKey: {\n      type: String\n    }\n  },\n  data() {\n    return {\n      baseUrl: 'http://localhost:3000/api/v1/character_generator',\n      characterName: \"\",\n      gameSystem: {},\n      // Want to get key from params, retrieve id, name, uses ancestry\n      loading: true\n    };\n  },\n  setup() {\n    const characterName = ref(\"\");\n    const selectedAncestry = ref(\"\");\n    const selectedClass = ref(\"\");\n    const selectedNameGender = ref(\"any\");\n    const selectedNameStyle = ref(\"\");\n    const sheetAncestry = ref(\"\");\n    const sheetClass = ref(\"\");\n    const availableAncestries = ref([]);\n    const availableClasses = ref([]);\n    const useAncestry = ref(false);\n    return {\n      availableAncestries,\n      availableClasses,\n      characterName,\n      selectedAncestry,\n      selectedClass,\n      selectedNameGender,\n      selectedNameStyle,\n      sheetAncestry,\n      sheetClass,\n      useAncestry\n    };\n  },\n  methods: {\n    fetchGameSystem() {\n      return fetch(`${this.baseUrl}/game_system/${this.gameSystemKey}`, {\n        method: 'get'\n      }).then(res => {\n        return res.json();\n      }).then(res => {\n        this.gameSystem = res.game_system;\n        this.loading = false;\n      });\n    },\n    fetchAncestries() {\n      fetch(`${this.baseUrl}/ancestries/${this.gameSystem.id}`, {\n        method: 'get'\n      }).then(res => {\n        return res.json();\n      }).then(res => {\n        this.availableAncestries = res.ancestries;\n        this.useAncestry = this.availableAncestries?.length > 0;\n      });\n    },\n    fetchClasses() {\n      fetch(`${this.baseUrl}/player_classes/${this.gameSystem.id}`, {\n        method: 'get'\n      }).then(res => {\n        return res.json();\n      }).then(res => {\n        this.availableClasses = res.player_classes;\n      });\n    },\n    selectAncestry(ancestryId) {\n      this.selectedAncestry = ancestryId;\n    },\n    selectClass(classId) {\n      this.selectedClass = classId;\n    },\n    selectNameGender(genderId) {\n      this.selectedNameGender = genderId;\n    },\n    selectNameStyle(styleId) {\n      this.selectedNameStyle = styleId;\n    },\n    generateCharacter() {\n      let ancestryId = this.selectedAncestry;\n      if (this.useAncestry) {\n        if (this.selectedAncestry) {\n          this.sheetAncestry = this.selectedAncestry;\n        } else {\n          const ancestryIndex = Math.floor(Math.random() * this.availableAncestries.length);\n          ancestryId = this.availableAncestries[ancestryIndex].id;\n          this.sheetAncestry = ancestryId;\n        }\n      } else {\n        ancestryId = \"none\";\n      }\n      if (this.selectedClass) {\n        this.sheetClass = this.selectedClass;\n      } else {\n        const classIndex = Math.floor(Math.random() * this.availableClasses.length);\n        this.sheetClass = this.availableClasses[classIndex].id;\n      }\n      this.fetchCharacterName();\n    },\n    fetchCharacterName() {\n      let url = `${this.baseUrl}/character_name/${this.gameSystem.id}`;\n      if (this.selectedNameStyle) {\n        url = url.concat(`/style/${this.selectedNameStyle}`);\n      } else {\n        url = url.concat(`/gender/${this.selectedNameGender}`);\n      }\n      if (this.sheetAncestry > -1) {\n        url = url.concat(`/${this.sheetAncestry}`);\n      }\n      fetch(url, {\n        method: 'get'\n      }).then(res => {\n        return res.json();\n      }).then(res => {\n        this.characterName = res.character_name;\n      });\n    }\n  },\n  created() {\n    this.fetchGameSystem().then(() => {\n      this.fetchAncestries();\n      this.fetchClasses();\n      this.fetchNameGenders();\n    });\n  }\n};","map":{"version":3,"names":["ref","CharacterCard","CharacterGeneratorRoller","components","props","gameSystemKey","type","String","data","baseUrl","characterName","gameSystem","loading","setup","selectedAncestry","selectedClass","selectedNameGender","selectedNameStyle","sheetAncestry","sheetClass","availableAncestries","availableClasses","useAncestry","methods","fetchGameSystem","fetch","method","then","res","json","game_system","fetchAncestries","id","ancestries","length","fetchClasses","player_classes","selectAncestry","ancestryId","selectClass","classId","selectNameGender","genderId","selectNameStyle","styleId","generateCharacter","ancestryIndex","Math","floor","random","classIndex","fetchCharacterName","url","concat","character_name","created","fetchNameGenders"],"sources":["/Users/lappy486/Code/pwf-games/src/components/CharacterGenerators/CharacterGeneratorPage.vue"],"sourcesContent":["<template>\n  <div className=\"character-generator-page\">\n    <CharacterGeneratorRoller :availableAncestries=\"availableAncestries\"\n                              :availableClasses=\"availableClasses\"\n                              :availableGenders=\"availableNameGenders\"\n                              :loading=\"loading\"\n                              :systemName=\"gameSystem.name\"\n                              @roll=\"generateCharacter()\"\n                              @selectAncestry=\"e => selectAncestry(e)\"\n                              @selectClass=\"e => selectClass(e)\"\n                              @selectGender=\"e => selectNameGender(e)\" />\n    <CharacterCard :availableAncestries=\"availableAncestries\"\n                   :availableClasses=\"availableClasses\"\n                   :presetCharName=\"characterName\"\n                   :selectedAncestry=\"sheetAncestry\"\n                   :selectedClass=\"sheetClass\" />\n    </div>\n</template>\n\n<script>\n/* eslint-disable */\nimport { ref } from 'vue';\n\nimport CharacterCard from \"../Cards/CharacterCard\";\nimport CharacterGeneratorRoller from \"./CharacterGeneratorRoller\";\n\nexport default {\n  components: {\n    CharacterCard,\n    CharacterGeneratorRoller\n  },\n  props: {\n    gameSystemKey: {\n      type: String\n    }\n  },\n  data () {\n    return {\n      baseUrl: 'http://localhost:3000/api/v1/character_generator',\n      characterName: \"\",\n      gameSystem: {},\n      // Want to get key from params, retrieve id, name, uses ancestry\n      loading: true\n    }\n  },\n  setup () {\n    const characterName = ref(\"\");\n    const selectedAncestry = ref(\"\");\n    const selectedClass = ref(\"\");\n    const selectedNameGender = ref(\"any\");\n    const selectedNameStyle = ref(\"\");\n    const sheetAncestry = ref(\"\");\n    const sheetClass = ref(\"\");\n\n    const availableAncestries = ref([]);\n    const availableClasses = ref([]);\n\n    const useAncestry = ref(false);\n\n    return {\n      availableAncestries,\n      availableClasses,\n      characterName,\n      selectedAncestry,\n      selectedClass,\n      selectedNameGender,\n      selectedNameStyle,\n      sheetAncestry,\n      sheetClass,\n      useAncestry\n    }\n  },\n  methods: {\n    fetchGameSystem () {\n      return fetch(`${this.baseUrl}/game_system/${this.gameSystemKey}`, {\n        method: 'get'\n      }).then((res) => {\n        return res.json();\n      }).then((res) => {\n        this.gameSystem = res.game_system;\n        this.loading = false;\n      })\n    },\n    fetchAncestries () {\n      fetch(`${this.baseUrl}/ancestries/${this.gameSystem.id}`, {\n        method: 'get'\n      }).then((res) => {\n        return res.json();\n      }).then((res) => {\n        this.availableAncestries = res.ancestries;\n        this.useAncestry = this.availableAncestries?.length > 0;\n      })\n    },\n    fetchClasses () {\n      fetch(`${this.baseUrl}/player_classes/${this.gameSystem.id}`, {\n        method: 'get'\n      }).then((res) => {\n        return res.json();\n      }).then((res) => {\n        this.availableClasses = res.player_classes;\n      })\n    },\n    selectAncestry (ancestryId) {\n      this.selectedAncestry = ancestryId;\n    },\n    selectClass (classId) {\n      this.selectedClass = classId;\n    },\n    selectNameGender (genderId) {\n      this.selectedNameGender = genderId;\n    },\n    selectNameStyle (styleId) {\n      this.selectedNameStyle = styleId;\n    },\n    generateCharacter() {\n      let ancestryId = this.selectedAncestry;\n      \n      if (this.useAncestry) {\n        if (this.selectedAncestry) {\n          this.sheetAncestry = this.selectedAncestry;\n        } else {\n          const ancestryIndex = Math.floor(Math.random() * (this.availableAncestries.length))\n          ancestryId = this.availableAncestries[ancestryIndex].id\n          this.sheetAncestry = ancestryId;\n        }\n      } else {\n        ancestryId = \"none\";\n      }\n\n      if (this.selectedClass) {\n        this.sheetClass = this.selectedClass;\n      } else {\n        const classIndex = Math.floor(Math.random() * (this.availableClasses.length))\n        this.sheetClass = this.availableClasses[classIndex].id;\n      }\n\n      this.fetchCharacterName();\n    },\n    fetchCharacterName () {\n      let url = `${this.baseUrl}/character_name/${this.gameSystem.id}`;\n\n      if (this.selectedNameStyle) {\n        url = url.concat(`/style/${this.selectedNameStyle}`);\n      } else {\n        url = url.concat(`/gender/${this.selectedNameGender}`)\n      }\n\n      if (this.sheetAncestry > -1) {\n        url = url.concat(`/${this.sheetAncestry}`);\n      }\n\n      fetch(url, {\n        method: 'get'\n      }).then((res) => {\n        return res.json();\n      }).then((res) => {\n        this.characterName = res.character_name;\n      });\n    }\n  },\n  created () {\n    this.fetchGameSystem().then(() => {\n      this.fetchAncestries();\n      this.fetchClasses();\n      this.fetchNameGenders();\n    });\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"./CharacterGeneratorPage.scss\";\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
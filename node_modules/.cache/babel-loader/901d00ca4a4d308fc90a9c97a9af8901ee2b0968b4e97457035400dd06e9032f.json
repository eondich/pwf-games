{"ast":null,"code":"/* eslint-disable */\nimport { ref } from 'vue';\nimport CharacterCard from \"../Cards/CharacterCard\";\nimport CharacterGeneratorRoller from \"./CharacterGeneratorRoller\";\nimport { fetchCharacterNameWithGender, fetchCharacterNameWithStyle, fetchNameGenders, fetchNameStyles } from './NameGenerator';\nexport default {\n  components: {\n    CharacterCard,\n    CharacterGeneratorRoller\n  },\n  props: {\n    gameSystemKey: {\n      type: String\n    }\n  },\n  data() {\n    return {\n      baseUrl: 'http://localhost:3000/api/v1/character_generator',\n      characterName: \"\",\n      gameSystem: {},\n      // Want to get key from params, retrieve id, name, uses ancestry\n      loading: true\n    };\n  },\n  setup() {\n    const characterName = ref(\"\");\n    const selectedAncestry = ref(\"\");\n    const selectedClass = ref(\"\");\n    const selectedNameGender = ref(\"any\");\n    const selectedNameStyle = ref(\"\");\n    const sheetAncestry = ref(\"\");\n    const sheetClass = ref(\"\");\n    const availableAncestries = ref([]);\n    const availableClasses = ref([]);\n    const availableNameGenders = ref([]);\n    const availableNameStyles = ref([]);\n    const availableSubclasses = ref([]);\n    const useAncestry = ref(false);\n    return {\n      availableAncestries,\n      availableClasses,\n      availableNameGenders,\n      availableNameStyles,\n      availableSubclasses,\n      characterName,\n      selectedAncestry,\n      selectedClass,\n      selectedNameGender,\n      selectedNameStyle,\n      sheetAncestry,\n      sheetClass,\n      useAncestry\n    };\n  },\n  methods: {\n    fetchGameSystem() {\n      return fetch(`${this.baseUrl}/game_system/${this.gameSystemKey}`, {\n        method: 'get'\n      }).then(res => {\n        return res.json();\n      }).then(res => {\n        this.gameSystem = res.game_system;\n        this.loading = false;\n      });\n    },\n    fetchAncestries() {\n      fetch(`${this.baseUrl}/ancestries/${this.gameSystem.id}`, {\n        method: 'get'\n      }).then(res => {\n        return res.json();\n      }).then(res => {\n        this.availableAncestries = res.ancestries;\n        this.useAncestry = this.availableAncestries?.length > 0;\n      });\n    },\n    fetchClasses() {\n      fetch(`${this.baseUrl}/player_classes/${this.gameSystem.id}`, {\n        method: 'get'\n      }).then(res => {\n        return res.json();\n      }).then(res => {\n        this.availableClasses = res.player_classes;\n      });\n    },\n    fetchSubclasses() {\n      fetch(`${this.baseUrl}/player_subclasses/${this.gameSystem.id}/${this.selectedClass}`, {\n        method: 'get'\n      }).then(res => {\n        return res.json();\n      }).then(res => {\n        this.availableSubclasses = res.player_subclasses;\n      });\n    },\n    selectAncestry(ancestryId) {\n      this.selectedAncestry = ancestryId;\n    },\n    selectClass(classId) {\n      this.selectedClass = classId;\n      this.fetchSubclasses();\n    },\n    selectNameGender(genderId) {\n      this.selectedNameGender = genderId;\n    },\n    selectNameStyle(styleId) {\n      this.selectedNameStyle = styleId;\n    },\n    generateCharacter() {\n      let ancestryId = this.selectedAncestry;\n      if (this.useAncestry) {\n        if (this.selectedAncestry) {\n          this.sheetAncestry = this.selectedAncestry;\n        } else {\n          const ancestryIndex = Math.floor(Math.random() * this.availableAncestries.length);\n          ancestryId = this.availableAncestries[ancestryIndex].id;\n          this.sheetAncestry = ancestryId;\n        }\n      } else {\n        ancestryId = \"none\";\n      }\n      if (this.selectedClass) {\n        this.sheetClass = this.selectedClass;\n      } else {\n        const classIndex = Math.floor(Math.random() * this.availableClasses.length);\n        this.sheetClass = this.availableClasses[classIndex].id;\n      }\n      const url = `${this.baseUrl}/character_name/${this.gameSystem.id}`;\n      if (this.availableNameStyles.length) {\n        fetchCharacterNameWithStyle(url, this.selectedNameStyle, this.selectAncestry).then(res => {\n          this.characterName = res;\n        });\n      } else {\n        fetchCharacterNameWithGender(url, this.selectedNameGender, this.selectAncestry).then(res => {\n          this.characterName = res;\n        });\n      }\n    }\n  },\n  created() {\n    this.fetchGameSystem().then(() => {\n      this.fetchAncestries();\n      this.fetchClasses();\n      fetchNameStyles(this.baseUrl, this.gameSystem.id).then(res => {\n        if (res?.length > 0) {\n          this.availableNameStyles = res;\n        } else {\n          fetchNameGenders(this.baseUrl).then(res => {\n            this.availableNameGenders = res;\n          });\n        }\n      });\n    });\n  }\n};","map":{"version":3,"names":["ref","CharacterCard","CharacterGeneratorRoller","fetchCharacterNameWithGender","fetchCharacterNameWithStyle","fetchNameGenders","fetchNameStyles","components","props","gameSystemKey","type","String","data","baseUrl","characterName","gameSystem","loading","setup","selectedAncestry","selectedClass","selectedNameGender","selectedNameStyle","sheetAncestry","sheetClass","availableAncestries","availableClasses","availableNameGenders","availableNameStyles","availableSubclasses","useAncestry","methods","fetchGameSystem","fetch","method","then","res","json","game_system","fetchAncestries","id","ancestries","length","fetchClasses","player_classes","fetchSubclasses","player_subclasses","selectAncestry","ancestryId","selectClass","classId","selectNameGender","genderId","selectNameStyle","styleId","generateCharacter","ancestryIndex","Math","floor","random","classIndex","url","created"],"sources":["/Users/lappy486/Code/pwf-games/src/components/CharacterGenerators/CharacterGeneratorPage.vue"],"sourcesContent":["<template>\n  <div className=\"character-generator-page\">\n    <CharacterGeneratorRoller :availableAncestries=\"availableAncestries\"\n                              :availableClasses=\"availableClasses\"\n                              :availableNameGenders=\"availableNameGenders\"\n                              :availableNameStyles=\"availableNameStyles\"\n                              :availableSubclasses=\"[]\"\n                              :loading=\"loading\"\n                              :systemName=\"gameSystem.name\"\n                              @roll=\"generateCharacter()\"\n                              @selectAncestry=\"e => selectAncestry(e)\"\n                              @selectClass=\"e => selectClass(e)\"\n                              @selectGender=\"e => selectNameGender(e)\" \n                              @selectStyle=\"e => selectNameStyle(e)\" />\n    <CharacterCard :availableAncestries=\"availableAncestries\"\n                   :availableClasses=\"availableClasses\"\n                   :presetCharName=\"characterName\"\n                   :selectedAncestry=\"sheetAncestry\"\n                   :selectedClass=\"sheetClass\" />\n    </div>\n</template>\n\n<script>\n/* eslint-disable */\nimport { ref } from 'vue';\n\nimport CharacterCard from \"../Cards/CharacterCard\";\nimport CharacterGeneratorRoller from \"./CharacterGeneratorRoller\";\n\nimport { fetchCharacterNameWithGender, fetchCharacterNameWithStyle, fetchNameGenders, fetchNameStyles } from './NameGenerator';\n\nexport default {\n  components: {\n    CharacterCard,\n    CharacterGeneratorRoller\n  },\n  props: {\n    gameSystemKey: {\n      type: String\n    }\n  },\n  data () {\n    return {\n      baseUrl: 'http://localhost:3000/api/v1/character_generator',\n      characterName: \"\",\n      gameSystem: {},\n      // Want to get key from params, retrieve id, name, uses ancestry\n      loading: true\n    }\n  },\n  setup () {\n    const characterName = ref(\"\");\n    const selectedAncestry = ref(\"\");\n    const selectedClass = ref(\"\");\n    const selectedNameGender = ref(\"any\");\n    const selectedNameStyle = ref(\"\");\n    const sheetAncestry = ref(\"\");\n    const sheetClass = ref(\"\");\n\n    const availableAncestries = ref([]);\n    const availableClasses = ref([]);\n    const availableNameGenders = ref([]);\n    const availableNameStyles = ref([]);\n    const availableSubclasses = ref([]);\n\n    const useAncestry = ref(false);\n\n    return {\n      availableAncestries,\n      availableClasses,\n      availableNameGenders,\n      availableNameStyles,\n      availableSubclasses,\n      characterName,\n      selectedAncestry,\n      selectedClass,\n      selectedNameGender,\n      selectedNameStyle,\n      sheetAncestry,\n      sheetClass,\n      useAncestry\n    }\n  },\n  methods: {\n    fetchGameSystem () {\n      return fetch(`${this.baseUrl}/game_system/${this.gameSystemKey}`, {\n        method: 'get'\n      }).then((res) => {\n        return res.json();\n      }).then((res) => {\n        this.gameSystem = res.game_system;\n        this.loading = false;\n      });\n    },\n    fetchAncestries () {\n      fetch(`${this.baseUrl}/ancestries/${this.gameSystem.id}`, {\n        method: 'get'\n      }).then((res) => {\n        return res.json();\n      }).then((res) => {\n        this.availableAncestries = res.ancestries;\n        this.useAncestry = this.availableAncestries?.length > 0;\n      });\n    },\n    fetchClasses () {\n      fetch(`${this.baseUrl}/player_classes/${this.gameSystem.id}`, {\n        method: 'get'\n      }).then((res) => {\n        return res.json();\n      }).then((res) => {\n        this.availableClasses = res.player_classes;\n      });\n    },\n    fetchSubclasses () {\n      fetch(`${this.baseUrl}/player_subclasses/${this.gameSystem.id}/${this.selectedClass}`, {\n        method: 'get'\n      }).then((res) => {\n        return res.json();\n      }).then((res) => {\n        this.availableSubclasses = res.player_subclasses;\n      });\n    },\n    selectAncestry (ancestryId) {\n      this.selectedAncestry = ancestryId;\n    },\n    selectClass (classId) {\n      this.selectedClass = classId;\n      this.fetchSubclasses();\n    },\n    selectNameGender (genderId) {\n      this.selectedNameGender = genderId;\n    },\n    selectNameStyle (styleId) {\n      this.selectedNameStyle = styleId;\n    },\n    generateCharacter() {\n      let ancestryId = this.selectedAncestry;\n      \n      if (this.useAncestry) {\n        if (this.selectedAncestry) {\n          this.sheetAncestry = this.selectedAncestry;\n        } else {\n          const ancestryIndex = Math.floor(Math.random() * (this.availableAncestries.length))\n          ancestryId = this.availableAncestries[ancestryIndex].id\n          this.sheetAncestry = ancestryId;\n        }\n      } else {\n        ancestryId = \"none\";\n      }\n\n      if (this.selectedClass) {\n        this.sheetClass = this.selectedClass;\n      } else {\n        const classIndex = Math.floor(Math.random() * (this.availableClasses.length))\n        this.sheetClass = this.availableClasses[classIndex].id;\n      }\n\n      const url = `${this.baseUrl}/character_name/${this.gameSystem.id}`;\n\n      if (this.availableNameStyles.length) {\n        fetchCharacterNameWithStyle(url, this.selectedNameStyle, this.selectAncestry)\n          .then(res => {\n            this.characterName = res;\n          });\n      } else {\n        fetchCharacterNameWithGender(url, this.selectedNameGender, this.selectAncestry)\n          .then(res => {\n            this.characterName = res;\n          });\n      }\n    },\n    \n  },\n  created () {\n    this.fetchGameSystem().then(() => {\n      this.fetchAncestries();\n      this.fetchClasses();\n      fetchNameStyles(this.baseUrl, this.gameSystem.id).then(res => {\n        if (res?.length > 0) {\n          this.availableNameStyles = res;\n        } else {\n          fetchNameGenders(this.baseUrl).then(res => {\n            this.availableNameGenders = res;\n          });\n        }\n      });\n    });\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"./CharacterGeneratorPage.scss\";\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
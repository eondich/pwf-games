{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3e0b8eef\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  className: \"character-generator-page\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CharacterGeneratorRoller = _resolveComponent(\"CharacterGeneratorRoller\");\n  const _component_CharacterCard = _resolveComponent(\"CharacterCard\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_CharacterGeneratorRoller, {\n    availableAncestries: $setup.availableAncestries,\n    availableClasses: $setup.availableClasses,\n    availableLineages: $setup.availableLineages,\n    availableNameGenders: $setup.availableNameGenders || [],\n    availableNameStyles: $setup.availableNameStyles,\n    availableSubclasses: $setup.selectedClass ? $setup.availableSubclasses : [],\n    loading: $data.loading,\n    systemName: $data.gameSystem.name,\n    onRoll: _cache[0] || (_cache[0] = $event => $options.generateCharacter()),\n    onSelectAncestry: _cache[1] || (_cache[1] = e => $options.selectAncestry(e)),\n    onSelectLineage: _cache[2] || (_cache[2] = e => $options.selectLineage(e)),\n    onSelectClass: _cache[3] || (_cache[3] = e => $options.selectClass(e)),\n    onSelectGender: _cache[4] || (_cache[4] = e => $options.selectNameGender(e)),\n    onSelectStyle: _cache[5] || (_cache[5] = e => $options.selectNameStyle(e)),\n    onSelectSubclass: _cache[6] || (_cache[6] = e => $options.selectSubclass(e))\n  }, null, 8 /* PROPS */, [\"availableAncestries\", \"availableClasses\", \"availableLineages\", \"availableNameGenders\", \"availableNameStyles\", \"availableSubclasses\", \"loading\", \"systemName\"]), _createVNode(_component_CharacterCard, {\n    availableAncestries: $setup.availableAncestries,\n    availableLineages: $setup.sheetAvailableLineages,\n    availableClasses: $setup.availableClasses,\n    availableSubclasses: $setup.sheetAvailableSubclasses,\n    presetCharName: $setup.characterName,\n    selectedAncestry: $setup.sheetAncestry,\n    selectedLineage: $setup.sheetLineage,\n    selectedClass: $setup.sheetClass,\n    selectedSubclass: $setup.sheetSubclass,\n    onSelectAncestry: _cache[7] || (_cache[7] = e => $options.selectSheetAncestry(e)),\n    onSelectClass: _cache[8] || (_cache[8] = e => $options.selectSheetClass(e))\n  }, null, 8 /* PROPS */, [\"availableAncestries\", \"availableLineages\", \"availableClasses\", \"availableSubclasses\", \"presetCharName\", \"selectedAncestry\", \"selectedLineage\", \"selectedClass\", \"selectedSubclass\"])]);\n}","map":{"version":3,"names":["className","_createElementBlock","_hoisted_1","_createVNode","_component_CharacterGeneratorRoller","availableAncestries","$setup","availableClasses","availableLineages","availableNameGenders","availableNameStyles","availableSubclasses","selectedClass","loading","$data","systemName","gameSystem","name","onRoll","_cache","$event","$options","generateCharacter","onSelectAncestry","e","selectAncestry","onSelectLineage","selectLineage","onSelectClass","selectClass","onSelectGender","selectNameGender","onSelectStyle","selectNameStyle","onSelectSubclass","selectSubclass","_component_CharacterCard","sheetAvailableLineages","sheetAvailableSubclasses","presetCharName","characterName","selectedAncestry","sheetAncestry","selectedLineage","sheetLineage","sheetClass","selectedSubclass","sheetSubclass","selectSheetAncestry","selectSheetClass"],"sources":["/Users/lappy486/Code/pwf-games/src/components/CharacterGenerators/CharacterGeneratorPage.vue"],"sourcesContent":["<template>\n  <div className=\"character-generator-page\">\n    <CharacterGeneratorRoller :availableAncestries=\"availableAncestries\"\n                              :availableClasses=\"availableClasses\"\n                              :availableLineages=\"availableLineages\"\n                              :availableNameGenders=\"availableNameGenders || []\"\n                              :availableNameStyles=\"availableNameStyles\"\n                              :availableSubclasses=\"selectedClass ? availableSubclasses : []\"\n                              :loading=\"loading\"\n                              :systemName=\"gameSystem.name\"\n                              @roll=\"generateCharacter()\"\n                              @selectAncestry=\"e => selectAncestry(e)\"\n                              @selectLineage=\"e => selectLineage(e)\"\n                              @selectClass=\"e => selectClass(e)\"\n                              @selectGender=\"e => selectNameGender(e)\" \n                              @selectStyle=\"e => selectNameStyle(e)\"\n                              @selectSubclass=\"e => selectSubclass(e)\" />\n    <CharacterCard :availableAncestries=\"availableAncestries\"\n                   :availableLineages=\"sheetAvailableLineages\"\n                   :availableClasses=\"availableClasses\"\n                   :availableSubclasses=\"sheetAvailableSubclasses\"\n                   :presetCharName=\"characterName\"\n                   :selectedAncestry=\"sheetAncestry\"\n                   :selectedLineage=\"sheetLineage\"\n                   :selectedClass=\"sheetClass\"\n                   :selectedSubclass=\"sheetSubclass\"\n                   @selectAncestry=\"e => selectSheetAncestry(e)\"\n                   @selectClass=\"e => selectSheetClass(e)\" />\n    </div>\n</template>\n\n<script>\n/* eslint-disable */\nimport { ref } from 'vue';\n\nimport CharacterCard from \"../Cards/CharacterCard\";\nimport CharacterGeneratorRoller from \"./CharacterGeneratorRoller\";\n\nimport { fetchCharacterNameWithGender, fetchCharacterNameWithStyle, fetchNameGenders, fetchNameStyles } from './NameGenerator';\n\nexport default {\n  components: {\n    CharacterCard,\n    CharacterGeneratorRoller\n  },\n  props: {\n    gameSystemKey: {\n      type: String\n    }\n  },\n  data () {\n    return {\n      baseUrl: 'http://localhost:3000/api/v1/character_generator',\n      characterName: \"\",\n      gameSystem: {},\n      // Want to get key from params, retrieve id, name, uses ancestry\n      loading: true\n    }\n  },\n  setup () {\n    const characterName = ref(\"\");\n    const selectedAncestry = ref(\"\");\n    const selectedLineage = ref(\"\");\n    const selectedBackground = ref(\"\");\n    const selectedClass = ref(\"\");\n    const selectedSubclass = ref(\"\");\n    const selectedNameGender = ref(\"any\");\n    const selectedNameStyle = ref(\"\");\n  \n    const sheetAncestry = ref(\"\");\n    const sheetLineage = ref(\"\");\n    const sheetBackground = ref(\"\");\n    const sheetClass = ref(\"\");\n    const sheetSubclass = ref(\"\");\n\n    const availableAncestries = ref([]);\n    const availableLineages = ref([]);\n    const sheetAvailableLineages = ref([]);\n    const availableClasses = ref([]);\n    const availableNameGenders = ref([]);\n    const availableNameStyles = ref([]);\n    const availableSubclasses = ref([]);\n    const sheetAvailableSubclasses = ref([]);\n\n    const useAncestry = ref(false);\n\n    return {\n      availableAncestries,\n      availableLineages,\n      availableClasses,\n      availableNameGenders,\n      availableNameStyles,\n      availableSubclasses,\n      characterName,\n      selectedAncestry,\n      selectedLineage,\n      selectedClass,\n      selectedSubclass,\n      selectedNameGender,\n      selectedNameStyle,\n      sheetAncestry,\n      sheetLineage,\n      sheetAvailableLineages,\n      sheetClass,\n      sheetSubclass,\n      sheetAvailableSubclasses,\n      useAncestry\n    }\n  },\n  methods: {\n    fetchGameSystem () {\n      return fetch(`${this.baseUrl}/game_system/${this.gameSystemKey}`, {\n        method: 'get'\n      }).then((res) => {\n        return res.json();\n      }).then((res) => {\n        this.gameSystem = res.game_system;\n        this.loading = false;\n      });\n    },\n    fetchBasePageData () {\n      fetch(`${this.baseUrl}/base_data/${this.gameSystem.id}`, {\n        method: 'get'\n      }).then((res) => {\n        return res.json();\n      }).then((res) => {\n        this.availableAncestries = res.ancestries;\n        this.useAncestry = this.availableAncestries?.length > 0;\n        this.availableClasses = res.player_classes;\n        this.availableNameGenders = res.gender_options;\n        this.availableNameStyles = res.name_styles;\n      });\n    },\n    // Long term I don't want to use a param for this, but am planning to seriously rework this after\n    // switching to <script setup> and doing some context API work so it'll do to get things running\n    fetchLineages (forSheet) {\n      const activeLineage = this.selectedAncestry || this.sheetAncestry;\n      return fetch(`${this.baseUrl}/lineages/${this.gameSystem.id}/${activeLineage}`, {\n        method: 'get'\n      }).then((res) => {\n        return res.json();\n      }).then((res) => {\n        if (forSheet) {\n          this.sheetAvailableLineages = res.lineages;\n        } else {\n          this.availableLineages = res.lineages;\n        }\n      }); \n    },\n    fetchClasses () {\n      fetch(`${this.baseUrl}/player_classes/${this.gameSystem.id}`, {\n        method: 'get'\n      }).then((res) => {\n        return res.json();\n      }).then((res) => {\n        this.availableClasses = res.player_classes;\n      });\n    },\n    // See fetchLineages note\n    fetchSubclasses (forSheet) {\n      const activeClass = this.selectedClass || this.sheetClass;\n      return fetch(`${this.baseUrl}/player_subclasses/${this.gameSystem.id}/${activeClass}`, {\n        method: 'get'\n      }).then((res) => {\n        return res.json();\n      }).then((res) => {\n        if (forSheet) {\n          this.sheetAvailableSubclasses = res.player_subclasses;\n        } else {\n          this.availableSubclasses = res.player_subclasses;\n        }\n      });\n    },\n    selectAncestry (ancestryId) {\n      this.selectedAncestry = ancestryId;\n      this.fetchLineages(false);\n    },\n    selectSheetAncestry (ancestryId) {\n      this.sheetAncestry = ancestryId;\n      this.sheetLineage = null;\n      this.fetchLineages(true);\n    },\n    selectLineage (lineageId) {\n      this.selectedLineage = lineageId;\n    },\n    selectClass (classId) {\n      this.selectedClass = classId;\n      this.selectedSubclass = null;\n      this.fetchSubclasses(false);\n    },\n    selectSheetClass (classId) {\n      this.sheetClass = classId;\n      this.sheetSubclass = null;\n      this.fetchSubclasses(true);\n    },\n    selectSubclass (subclassId) {\n      this.selectedSubclass = subclassId;\n    },\n    selectNameGender (genderId) {\n      this.selectedNameGender = genderId;\n    },\n    selectNameStyle (styleId) {\n      this.selectedNameStyle = styleId;\n    },\n    generateLineage () {\n      if (this.selectedLineage) {\n        this.sheetLineage = this.selectedLineage;\n      } else if (this.sheetAvailableLineages?.length) {\n        const lineageIndex = Math.floor(Math.random() * this.sheetAvailableLineages.length);\n        this.sheetLineage = this.sheetAvailableLineages[lineageIndex].id;\n      } else {\n        this.sheetLineage = null;\n      }\n    },\n    generateSubclass () {\n      if (this.selectedSubclass) {\n        this.sheetSubclass = this.selectedSubclass;\n      } else if (this.sheetAvailableSubclasses) {\n        const subclassIndex = Math.floor(Math.random() * (this.sheetAvailableSubclasses.length));\n        this.sheetSubclass = this.sheetAvailableSubclasses[subclassIndex].id;\n      } else {\n        this.sheetSubclass = null;\n      }\n    },\n    generateCharacter() {\n      if (this.useAncestry) {\n        if (this.selectedAncestry) {\n          this.sheetAncestry = this.selectedAncestry;\n          this.sheetAvailableLineages = this.availableLineages;\n          this.generateLineage();\n        } else {\n          const ancestryIndex = Math.floor(Math.random() * this.availableAncestries.length);\n          const ancestryId = this.availableAncestries[ancestryIndex].id\n          this.sheetAncestry = ancestryId;\n          this.fetchLineages(true).then(() => {\n            this.generateLineage();\n          });\n        }\n      }\n      \n      if (this.selectedClass) {\n        this.sheetClass = this.selectedClass;\n        this.sheetAvailableSubclasses = this.availableSubclasses;\n        this.generateSubclass();\n      } else {\n        const classIndex = Math.floor(Math.random() * (this.availableClasses.length));\n        this.sheetClass = this.availableClasses[classIndex].id;\n        \n        this.fetchSubclasses(true).then(() => {\n          this.generateSubclass();\n        });\n      }\n\n      const url = `${this.baseUrl}/character_name/${this.gameSystem.id}`;\n\n      if (this.availableNameStyles.length) {\n        fetchCharacterNameWithStyle(url, this.selectedNameStyle, this.selectAncestry)\n          .then(res => {\n            this.characterName = res;\n          });\n      } else {\n        fetchCharacterNameWithGender(url, this.selectedNameGender, this.selectAncestry)\n          .then(res => {\n            this.characterName = res;\n          });\n      }\n    },\n    \n  },\n  created () {\n    this.fetchGameSystem().then(() => {\n      this.fetchBasePageData();\n    });\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"./CharacterGeneratorPage.scss\";\n</style>"],"mappings":";;;EACOA,SAAS,EAAC;AAA0B;;;;uBAAzCC,mBAAA,CA2BQ,OA3BRC,UA2BQ,GA1BNC,YAAA,CAcqEC,mCAAA;IAd1CC,mBAAmB,EAAEC,MAAA,CAAAD,mBAAmB;IACxCE,gBAAgB,EAAED,MAAA,CAAAC,gBAAgB;IAClCC,iBAAiB,EAAEF,MAAA,CAAAE,iBAAiB;IACpCC,oBAAoB,EAAEH,MAAA,CAAAG,oBAAoB;IAC1CC,mBAAmB,EAAEJ,MAAA,CAAAI,mBAAmB;IACxCC,mBAAmB,EAAEL,MAAA,CAAAM,aAAa,GAAGN,MAAA,CAAAK,mBAAmB;IACxDE,OAAO,EAAEC,KAAA,CAAAD,OAAO;IAChBE,UAAU,EAAED,KAAA,CAAAE,UAAU,CAACC,IAAI;IAC3BC,MAAI,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,iBAAiB;IACvBC,gBAAc,EAAAJ,MAAA,QAAAA,MAAA,MAAEK,CAAC,IAAIH,QAAA,CAAAI,cAAc,CAACD,CAAC;IACrCE,eAAa,EAAAP,MAAA,QAAAA,MAAA,MAAEK,CAAC,IAAIH,QAAA,CAAAM,aAAa,CAACH,CAAC;IACnCI,aAAW,EAAAT,MAAA,QAAAA,MAAA,MAAEK,CAAC,IAAIH,QAAA,CAAAQ,WAAW,CAACL,CAAC;IAC/BM,cAAY,EAAAX,MAAA,QAAAA,MAAA,MAAEK,CAAC,IAAIH,QAAA,CAAAU,gBAAgB,CAACP,CAAC;IACrCQ,aAAW,EAAAb,MAAA,QAAAA,MAAA,MAAEK,CAAC,IAAIH,QAAA,CAAAY,eAAe,CAACT,CAAC;IACnCU,gBAAc,EAAAf,MAAA,QAAAA,MAAA,MAAEK,CAAC,IAAIH,QAAA,CAAAc,cAAc,CAACX,CAAC;4LAChErB,YAAA,CAUyDiC,wBAAA;IAVzC/B,mBAAmB,EAAEC,MAAA,CAAAD,mBAAmB;IACxCG,iBAAiB,EAAEF,MAAA,CAAA+B,sBAAsB;IACzC9B,gBAAgB,EAAED,MAAA,CAAAC,gBAAgB;IAClCI,mBAAmB,EAAEL,MAAA,CAAAgC,wBAAwB;IAC7CC,cAAc,EAAEjC,MAAA,CAAAkC,aAAa;IAC7BC,gBAAgB,EAAEnC,MAAA,CAAAoC,aAAa;IAC/BC,eAAe,EAAErC,MAAA,CAAAsC,YAAY;IAC7BhC,aAAa,EAAEN,MAAA,CAAAuC,UAAU;IACzBC,gBAAgB,EAAExC,MAAA,CAAAyC,aAAa;IAC/BxB,gBAAc,EAAAJ,MAAA,QAAAA,MAAA,MAAEK,CAAC,IAAIH,QAAA,CAAA2B,mBAAmB,CAACxB,CAAC;IAC1CI,aAAW,EAAAT,MAAA,QAAAA,MAAA,MAAEK,CAAC,IAAIH,QAAA,CAAA4B,gBAAgB,CAACzB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
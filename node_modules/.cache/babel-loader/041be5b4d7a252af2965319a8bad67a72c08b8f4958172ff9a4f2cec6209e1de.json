{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3e0b8eef\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  className: \"character-generator-page\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CharacterGeneratorRoller = _resolveComponent(\"CharacterGeneratorRoller\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_CharacterGeneratorRoller, {\n    availableAncestries: $setup.availableAncestries,\n    availableClasses: $setup.availableClasses,\n    availableGenders: $setup.availableNameGenders,\n    loading: $data.loading,\n    systemName: $data.gameSystem.name,\n    useAncestry: $setup.useAncestry\n  }, null, 8 /* PROPS */, [\"availableAncestries\", \"availableClasses\", \"availableGenders\", \"loading\", \"systemName\", \"useAncestry\"]), _createCommentVNode(\" @selectAncestry=\\\"\\\"\\n                              @selectClass=\\\"\\\"\\n                              @selectGender=\\\"\\\" /> \"), _createCommentVNode(\" <CharacterCard :availableAncestries=\\\"availableAncestries\\\"\\n                   :availableClasses=\\\"availableClasses\\\"\\n                   :presetCharName=\\\"characterName\\\"\\n                   :selectedAncestry=\\\"sheetAncestry\\\"\\n                   :selectedClass=\\\"sheetClass\\\"\\n                   :useAncestry=\\\"gameSystem.usesAncestry\\\" /> \")]);\n}","map":{"version":3,"names":["className","_createElementBlock","_hoisted_1","_createVNode","_component_CharacterGeneratorRoller","availableAncestries","$setup","availableClasses","availableGenders","availableNameGenders","loading","$data","systemName","gameSystem","name","useAncestry","_createCommentVNode"],"sources":["/Users/lappy486/Code/pwf-games/src/components/CharacterGenerators/CharacterGeneratorPage.vue"],"sourcesContent":["<template>\n  <div className=\"character-generator-page\">\n    <CharacterGeneratorRoller :availableAncestries=\"availableAncestries\"\n                              :availableClasses=\"availableClasses\"\n                              :availableGenders=\"availableNameGenders\"\n                              :loading=\"loading\"\n                              :systemName=\"gameSystem.name\"\n                              :useAncestry=\"useAncestry\" />\n                              <!-- @selectAncestry=\"\"\n                              @selectClass=\"\"\n                              @selectGender=\"\" /> -->\n    <!-- <CharacterCard :availableAncestries=\"availableAncestries\"\n                   :availableClasses=\"availableClasses\"\n                   :presetCharName=\"characterName\"\n                   :selectedAncestry=\"sheetAncestry\"\n                   :selectedClass=\"sheetClass\"\n                   :useAncestry=\"gameSystem.usesAncestry\" /> -->\n    </div>\n</template>\n\n<script>\n/* eslint-disable */\nimport { ref } from 'vue'\n\n// import { onCreated } from 'vue';\n// import { useRoute } from 'vue-router';\n\n// import CharacterCard from \"../Cards/CharacterCard\";\nimport CharacterGeneratorRoller from \"./CharacterGeneratorRoller\";\n\nexport default {\n  components: {\n    // CharacterCard,\n    CharacterGeneratorRoller\n  },\n  data () {\n    return {\n      baseUrl: 'http://localhost:3000/api/v1/character_generator',\n      characterName: \"\",\n      gameSystem: {},\n      // Want to get key from params, retrieve id, name, uses ancestry\n      loading: true\n    }\n  },\n  setup () {\n    const characterName = \"\";\n    const selectedAncestry = \"\";\n    const selectedClass = \"\";\n    const selectedNameGender = \"any\";\n    const sheetAncestry = \"\";\n    const sheetClass = \"\";\n    const useAncestry = true; // Reset this later\n\n    const availableAncestries = ref([]);\n    const availableClasses = ref([]);\n    const availableNameGenders = [];\n\n    return {\n      availableAncestries,\n      availableClasses,\n      availableNameGenders,\n      characterName,\n      selectedAncestry,\n      selectedClass,\n      selectedNameGender,\n      sheetAncestry,\n      sheetClass,\n      useAncestry\n    }\n  },\n  methods: {\n    fetchGameSystem () {\n      // Testing w/ 5e, replace\n      return fetch(`${this.baseUrl}/game_system/dnd5e`, {\n        method: 'get'\n      }).then((res) => {\n        return res.json();\n      }).then((res) => {\n        this.gameSystem = res.game_system;\n        this.loading = false;\n      })\n    },\n    fetchAncestries () {\n      fetch(`${this.baseUrl}/ancestries/${this.gameSystem.id}`, {\n        method: 'get'\n      }).then((res) => {\n        return res.json();\n      }).then((res) => {\n        this.availableAncestries = res.ancestries;\n      })\n    },\n    fetchClasses () {\n      fetch(`${this.baseUrl}/player_classes/${this.gameSystem.id}`, {\n        method: 'get'\n      }).then((res) => {\n        return res.json();\n      }).then((res) => {\n        this.availableClasses = res.player_classes;\n      })\n    }\n  },\n  created () {\n    this.fetchGameSystem().then(() => {\n      this.fetchAncestries();\n      this.fetchClasses();\n    });\n  }\n}\n\nfunction fetchClasses () {\n  return [];\n}\n\nfunction fetchNameGenders () {\n  return [];\n}\n\n// function generateCharacter() {\n//   // let ancestryId = selectedAncestry;\n  \n//   // if (useAncestry) {\n//   //   if (selectedAncestry) {\n//   //     setSheetAncestry(selectedAncestry);\n//   //   } else {\n//   //     const ancestryIndex = Math.floor(Math.random() * (availableAncestries.length))\n//   //     ancestryId = availableAncestries[ancestryIndex].id\n//   //     setSheetAncestry(ancestryId);\n//   //   }\n//   // } else {\n//   //   ancestryId = \"none\";\n//   // }\n\n//   // if (selectedClass) {\n//   //   setSheetClass(selectedClass);\n//   // } else {\n//   //   const classIndex = Math.floor(Math.random() * (availableClasses.length))\n//   //   setSheetClass(availableClasses[classIndex].id);\n//   // }\n\n//   // fetchCharacterName(gameSystem, ancestryId, selectedNameGender);\n// }\n</script>\n\n<style scoped lang=\"scss\">\n@import \"./CharacterGeneratorPage.scss\";\n</style>"],"mappings":";;;EACOA,SAAS,EAAC;AAA0B;;;uBAAzCC,mBAAA,CAgBQ,OAhBRC,UAgBQ,GAfNC,YAAA,CAKuDC,mCAAA;IAL5BC,mBAAmB,EAAEC,MAAA,CAAAD,mBAAmB;IACxCE,gBAAgB,EAAED,MAAA,CAAAC,gBAAgB;IAClCC,gBAAgB,EAAEF,MAAA,CAAAG,oBAAoB;IACtCC,OAAO,EAAEC,KAAA,CAAAD,OAAO;IAChBE,UAAU,EAAED,KAAA,CAAAE,UAAU,CAACC,IAAI;IAC3BC,WAAW,EAAET,MAAA,CAAAS;oIACdC,mBAAA,gIAEuB,EACjDA,mBAAA,4VAK4D,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}
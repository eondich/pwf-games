{"ast":null,"code":"import { provide, ref } from 'vue';\nimport CharacterGeneratorRollerNew from './CharacterGeneratorRollerNew.vue';\nimport CharacterCardNew from '../Cards/CharacterCardNew.vue';\nconst baseUrl = 'http://localhost:3000/api/v1/character_generator';\nexport default {\n  __name: 'CharacterGeneratorNew',\n  props: {\n    gameSystemKey: String\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const props = __props;\n    const loading = ref(true);\n    const gameSystem = ref({});\n    const dropdownOptions = ref({\n      ancestries: [],\n      lineages: [],\n      appearances: [],\n      backgrounds: [],\n      characterClasses: [],\n      characterSubclasses: [],\n      nameGenders: [],\n      nameStyles: []\n    });\n    const baseOptions = {\n      ancestry: null,\n      appearance: null,\n      background: null,\n      characterClass: null\n    };\n    const subOptions = {\n      lineage: null,\n      characterSubclass: null\n    };\n    const generatorSpecific = {\n      nameGender: 'any',\n      nameStyle: null\n    };\n\n    // Generator selected data\n    const generatorSelectedOptions = ref({\n      ...baseOptions,\n      ...subOptions,\n      ...generatorSpecific\n    });\n    function setGeneratorSelectedOptions(optionKey, newVal) {\n      // TODO: stronger typing\n      generatorSelectedOptions[optionKey] = newVal;\n    }\n\n    // Need to be able to call for generator OR card :/\n    function fetchLineages() {\n      fetch(`${baseUrl}/lineages/${gameSystem.value.id}/${generatorSelectedOptions.value.ancestry}`, {\n        method: 'get'\n      }).then(res => {\n        return res.json();\n      }).then(res => {\n        cardDropdownOptions.value.lineages = res.lineages;\n      });\n    }\n    function fetchCharacterSubclasses() {\n      fetch(`${baseUrl}/player_subclasses/${gameSystem.value.id}/${generatorSelectedOptions.value.characterClass}`, {\n        method: 'get'\n      }).then(res => {\n        return res.json();\n      }).then(res => {\n        cardDropdownOptions.value.characterSubclasses = res.player_subclasses;\n      });\n    }\n    console.log(gameSystem.value.name);\n\n    // Move into api file?\n    function fetchBaseData() {\n      fetch(`${baseUrl}/base_data/${gameSystem.value.id}`, {\n        method: 'get'\n      }).then(res => {\n        return res.json();\n      }).then(res => {\n        dropdownOptions.value.ancestries = res.ancestries;\n        dropdownOptions.value.characterClasses = res.player_classes;\n        dropdownOptions.value.nameGenders = res.gender_options;\n        dropdownOptions.value.nameStyles = res.name_styles;\n        dropdownOptions.value.backgrounds = res.backgrounds;\n        dropdownOptions.value.appearances = res.appearances;\n      });\n      loading.value = false;\n      provide('generatorData', {\n        gameSystemName: gameSystem.value.name,\n        dropdownOptions,\n        fetchLineages,\n        fetchCharacterSubclasses\n      });\n    }\n    fetch(`${baseUrl}/game_system/${props.gameSystemKey}`, {\n      method: 'get'\n    }).then(res => {\n      return res.json();\n    }).then(res => {\n      gameSystem.value = res.game_system;\n      fetchBaseData();\n    });\n    provide('generatorSelected', {\n      generatorSelectedOptions,\n      setGeneratorSelectedOptions\n    });\n\n    // Card selected data\n    const cardSelectedOptions = ref({\n      ...baseOptions,\n      ...subOptions\n    });\n    function setCardSelectedOptions(optionKey, newVal) {\n      // TODO: stronger typing\n      cardSelectedOptions[optionKey] = newVal;\n    }\n    const cardDropdownOptions = ref({\n      characterSubclasses: [],\n      lineages: []\n    });\n    function generateAncestry() {\n      const ancestryIndex = Math.floor(Math.random() * dropdownOptions.value.ancestries.length);\n      const ancestryId = dropdownOptions.value.ancestries[ancestryIndex].id;\n      return ancestryId;\n    }\n    function generateAppearance() {\n      const appearanceIndex = Math.floor(Math.random() * dropdownOptions.value.appearances.length);\n      return dropdownOptions.value.appearances[appearanceIndex].id;\n    }\n    function generateBackground() {\n      const backgroundIndex = Math.floor(Math.random() * dropdownOptions.value.backgrounds.length);\n      return dropdownOptions.value.backgrounds[backgroundIndex].id;\n    }\n    function generateCharacterClass() {\n      const characterClassIndex = Math.floor(Math.random() * dropdownOptions.value.ancestries.length);\n      return dropdownOptions.value.ancestries[characterClassIndex].id;\n    }\n    function generateCharacterSubclass() {\n      fetchCharacterSubclasses(baseOptions.value.characterClass, characterSubclasses => {\n        cardDropdownOptions.value.characterSubclasses = characterSubclasses;\n      });\n      const subclassIndex = Math.floor(Math.random() * cardDropdownOptions.value.characterSubclasses.length);\n      return cardDropdownOptions.value.characterSubclasses[subclassIndex];\n    }\n    function generateLineage() {\n      fetchLineages(baseOptions.value.ancestry, lineages => {\n        cardDropdownOptions.value.lineages = lineages;\n      });\n      const lineageIndex = Math.floor(Math.random() * cardDropdownOptions.value.lineages.length);\n      return cardDropdownOptions.value.lineages[lineageIndex];\n    }\n    function rollNewCharacter() {\n      Object.keys(baseOptions.value).forEach(key => {\n        if (generatorSelectedOptions[key] !== cardSelectedOptions[key]) {\n          setCardSelectedOptions(key, generatorSelectedOptions[key]);\n        } else {\n          switch (key) {\n            case 'ancestry':\n              setCardSelectedOptions(key, generateAncestry());\n              break;\n            case 'appearance':\n              setCardSelectedOptions(key, generateAppearance());\n              break;\n            case 'background':\n              setCardSelectedOptions(key, generateBackground());\n              break;\n            case 'characterClass':\n              setCardSelectedOptions(key, generateCharacterClass());\n              break;\n            default:\n              break;\n          }\n        }\n      });\n      Object.keys(subOptions).forEach(key => {\n        if (generatorSelectedOptions[key] !== cardSelectedOptions[key]) {\n          setCardSelectedOptions(key, generatorSelectedOptions[key]);\n        } else {\n          switch (key) {\n            case 'lineage':\n              setCardSelectedOptions(key, generateLineage);\n              break;\n            case 'characterSubclass':\n              setCardSelectedOptions(key, generateCharacterSubclass);\n              break;\n            default:\n              break;\n          }\n        }\n      });\n    }\n    const __returned__ = {\n      props,\n      loading,\n      baseUrl,\n      gameSystem,\n      dropdownOptions,\n      baseOptions,\n      subOptions,\n      generatorSpecific,\n      generatorSelectedOptions,\n      setGeneratorSelectedOptions,\n      fetchLineages,\n      fetchCharacterSubclasses,\n      fetchBaseData,\n      cardSelectedOptions,\n      setCardSelectedOptions,\n      cardDropdownOptions,\n      generateAncestry,\n      generateAppearance,\n      generateBackground,\n      generateCharacterClass,\n      generateCharacterSubclass,\n      generateLineage,\n      rollNewCharacter,\n      provide,\n      ref,\n      CharacterGeneratorRollerNew,\n      CharacterCardNew\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["provide","ref","CharacterGeneratorRollerNew","CharacterCardNew","baseUrl","props","__props","loading","gameSystem","dropdownOptions","ancestries","lineages","appearances","backgrounds","characterClasses","characterSubclasses","nameGenders","nameStyles","baseOptions","ancestry","appearance","background","characterClass","subOptions","lineage","characterSubclass","generatorSpecific","nameGender","nameStyle","generatorSelectedOptions","setGeneratorSelectedOptions","optionKey","newVal","fetchLineages","fetch","value","id","method","then","res","json","cardDropdownOptions","fetchCharacterSubclasses","player_subclasses","console","log","name","fetchBaseData","player_classes","gender_options","name_styles","gameSystemName","gameSystemKey","game_system","cardSelectedOptions","setCardSelectedOptions","generateAncestry","ancestryIndex","Math","floor","random","length","ancestryId","generateAppearance","appearanceIndex","generateBackground","backgroundIndex","generateCharacterClass","characterClassIndex","generateCharacterSubclass","subclassIndex","generateLineage","lineageIndex","rollNewCharacter","Object","keys","forEach","key"],"sources":["/Users/lappy486/Code/pwf-games/src/components/CharacterGenerators/CharacterGeneratorNew.vue"],"sourcesContent":["<template>\n  <div v-if=\"loading\">Loading...</div>\n  <span v-else>\n    <CharacterGeneratorRollerNew @rollCharacter=\"rollNewCharacter()\" :loading=\"loading\" />\n    <CharacterCardNew :loading=\"loading\" />\n  </span>\n</template>\n\n<script setup>\nimport { provide, ref } from 'vue'\n\nimport CharacterGeneratorRollerNew from './CharacterGeneratorRollerNew.vue';\nimport CharacterCardNew from '../Cards/CharacterCardNew.vue';\n\nconst props = defineProps({\n  gameSystemKey: String\n});\n\nconst loading = ref(true);\nconst baseUrl = 'http://localhost:3000/api/v1/character_generator';\nconst gameSystem = ref({});\nconst dropdownOptions = ref({\n  ancestries: [],\n  lineages: [],\n  appearances: [],\n  backgrounds: [],\n  characterClasses: [],\n  characterSubclasses: [],\n  nameGenders: [],\n  nameStyles: [],\n});\n\nconst baseOptions = {\n  ancestry: null,\n  appearance: null,\n  background: null,\n  characterClass: null\n};\nconst subOptions = {\n  lineage: null,\n  characterSubclass: null\n};\nconst generatorSpecific = {\n  nameGender: 'any',\n  nameStyle: null\n};\n\n// Generator selected data\nconst generatorSelectedOptions = ref({\n  ...baseOptions,\n  ...subOptions,\n  ...generatorSpecific\n});\n\nfunction setGeneratorSelectedOptions (optionKey, newVal) {\n  // TODO: stronger typing\n  generatorSelectedOptions[optionKey] = newVal;\n}\n\n// Need to be able to call for generator OR card :/\nfunction fetchLineages () {\n  fetch(`${baseUrl}/lineages/${gameSystem.value.id}/${generatorSelectedOptions.value.ancestry}`, {\n    method: 'get'\n  }).then((res) => {\n    return res.json();\n  }).then((res) => {\n    cardDropdownOptions.value.lineages = res.lineages;\n  });\n}\n\nfunction fetchCharacterSubclasses () {\n  fetch(`${baseUrl}/player_subclasses/${gameSystem.value.id}/${generatorSelectedOptions.value.characterClass}`, {\n    method: 'get'\n  }).then((res) => {\n    return res.json();\n  }).then((res) => {\n    cardDropdownOptions.value.characterSubclasses = res.player_subclasses;\n  });\n}\n\nconsole.log(gameSystem.value.name)\n\n// Move into api file?\nfunction fetchBaseData () {\n  fetch(`${baseUrl}/base_data/${gameSystem.value.id}`, {\n    method: 'get'\n  }).then((res) => {\n    return res.json();\n  }).then((res) => {\n    dropdownOptions.value.ancestries = res.ancestries;\n    dropdownOptions.value.characterClasses = res.player_classes;\n    dropdownOptions.value.nameGenders = res.gender_options;\n    dropdownOptions.value.nameStyles = res.name_styles;\n    dropdownOptions.value.backgrounds = res.backgrounds;\n    dropdownOptions.value.appearances = res.appearances;\n  });\n  loading.value = false;\n  provide('generatorData', { gameSystemName: gameSystem.value.name, dropdownOptions, fetchLineages, fetchCharacterSubclasses });\n}\n\nfetch(`${baseUrl}/game_system/${props.gameSystemKey}`, {\n  method: 'get'\n}).then((res) => {\n  return res.json();\n}).then((res) => {\n  gameSystem.value = res.game_system;\n  fetchBaseData();\n});\n\nprovide('generatorSelected', { generatorSelectedOptions, setGeneratorSelectedOptions });\n\n// Card selected data\nconst cardSelectedOptions = ref({\n  ...baseOptions,\n  ...subOptions\n});\n\nfunction setCardSelectedOptions (optionKey, newVal) {\n  // TODO: stronger typing\n  cardSelectedOptions[optionKey] = newVal;\n}\n\nconst cardDropdownOptions = ref({\n  characterSubclasses: [],\n  lineages: []\n});\n\nfunction generateAncestry () {\n  const ancestryIndex = Math.floor(Math.random() * dropdownOptions.value.ancestries.length);\n  const ancestryId = dropdownOptions.value.ancestries[ancestryIndex].id;\n  return ancestryId;\n}\n\nfunction generateAppearance () {\n  const appearanceIndex = Math.floor(Math.random() * (dropdownOptions.value.appearances.length));\n  return dropdownOptions.value.appearances[appearanceIndex].id;\n}\n\nfunction generateBackground () {\n  const backgroundIndex = Math.floor(Math.random() * (dropdownOptions.value.backgrounds.length));\n  return dropdownOptions.value.backgrounds[backgroundIndex].id;\n}\n\nfunction generateCharacterClass () {\n  const characterClassIndex = Math.floor(Math.random() * dropdownOptions.value.ancestries.length);\n  return dropdownOptions.value.ancestries[characterClassIndex].id;\n}\n\nfunction generateCharacterSubclass () {\n  fetchCharacterSubclasses(baseOptions.value.characterClass, (characterSubclasses) => { cardDropdownOptions.value.characterSubclasses = characterSubclasses });\n  const subclassIndex = Math.floor(Math.random() * cardDropdownOptions.value.characterSubclasses.length);\n  return cardDropdownOptions.value.characterSubclasses[subclassIndex];\n}\n\nfunction generateLineage () {\n  fetchLineages(baseOptions.value.ancestry, (lineages) => { cardDropdownOptions.value.lineages = lineages })\n  const lineageIndex = Math.floor(Math.random() * cardDropdownOptions.value.lineages.length);\n  return cardDropdownOptions.value.lineages[lineageIndex];\n}\n\nfunction rollNewCharacter () {\n  Object.keys(baseOptions.value).forEach(key => {\n    if (generatorSelectedOptions[key] !== cardSelectedOptions[key]) {\n      setCardSelectedOptions(key, generatorSelectedOptions[key]);\n    } else {\n      switch (key) {\n        case 'ancestry':\n          setCardSelectedOptions(key, generateAncestry());\n          break;\n        case 'appearance':\n          setCardSelectedOptions(key, generateAppearance());\n          break;\n        case 'background':\n          setCardSelectedOptions(key, generateBackground());\n          break;\n        case 'characterClass':\n          setCardSelectedOptions(key, generateCharacterClass());\n          break;\n        default:\n          break;\n      }\n    }\n  });\n\n  Object.keys(subOptions).forEach(key => {\n    if (generatorSelectedOptions[key] !== cardSelectedOptions[key]) {\n      setCardSelectedOptions(key, generatorSelectedOptions[key]);\n    } else {\n      switch (key) {\n        case 'lineage':\n          setCardSelectedOptions(key, generateLineage);\n          break;\n        case 'characterSubclass':\n          setCardSelectedOptions(key, generateCharacterSubclass);\n          break;\n        default:\n          break;\n      }\n    }\n  });\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"./CharacterGeneratorPage.scss\";\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
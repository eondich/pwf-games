{"ast":null,"code":"/* eslint-disable */\nimport { ref } from 'vue';\n\n// import { onCreated } from 'vue';\n// import { useRoute } from 'vue-router';\n\n// import CharacterCard from \"../Cards/CharacterCard\";\nimport CharacterGeneratorRoller from \"./CharacterGeneratorRoller\";\nexport default {\n  components: {\n    // CharacterCard,\n    CharacterGeneratorRoller\n  },\n  data() {\n    return {\n      baseUrl: 'http://localhost:3000/api/v1/character_generator',\n      characterName: \"\",\n      gameSystem: {},\n      // Want to get key from params, retrieve id, name, uses ancestry\n      loading: true\n    };\n  },\n  setup() {\n    const characterName = \"\";\n    const selectedAncestry = ref(null);\n    const selectedClass = \"\";\n    const selectedNameGender = \"any\";\n    const sheetAncestry = \"\";\n    const sheetClass = \"\";\n    const useAncestry = true; // Reset this later\n\n    const availableAncestries = ref([]);\n    const availableClasses = ref([]);\n    const availableNameGenders = ref([]);\n    return {\n      availableAncestries,\n      availableClasses,\n      availableNameGenders,\n      characterName,\n      selectedAncestry,\n      selectedClass,\n      selectedNameGender,\n      sheetAncestry,\n      sheetClass,\n      useAncestry\n    };\n  },\n  methods: {\n    fetchGameSystem() {\n      // Testing w/ 5e, replace\n      return fetch(`${this.baseUrl}/game_system/dnd5e`, {\n        method: 'get'\n      }).then(res => {\n        return res.json();\n      }).then(res => {\n        this.gameSystem = res.game_system;\n        this.loading = false;\n      });\n    },\n    fetchAncestries() {\n      fetch(`${this.baseUrl}/ancestries/${this.gameSystem.id}`, {\n        method: 'get'\n      }).then(res => {\n        return res.json();\n      }).then(res => {\n        this.availableAncestries = res.ancestries;\n      });\n    },\n    fetchClasses() {\n      fetch(`${this.baseUrl}/player_classes/${this.gameSystem.id}`, {\n        method: 'get'\n      }).then(res => {\n        return res.json();\n      }).then(res => {\n        this.availableClasses = res.player_classes;\n      });\n    },\n    fetchNameGenders() {\n      fetch(`${this.baseUrl}/genders`, {\n        method: 'get'\n      }).then(res => {\n        return res.json();\n      }).then(res => {\n        this.availableNameGenders = res.gender_options;\n      });\n    },\n    selectAncestry(ancestryId) {\n      this.selectedAncestry = ancestryId;\n    },\n    selectClass(classId) {\n      this.selectedClass = classId;\n    },\n    selectNameGender(genderId) {\n      this.selectedNameGender = genderId;\n    }\n  },\n  created() {\n    this.fetchGameSystem().then(() => {\n      this.fetchAncestries();\n      this.fetchClasses();\n      this.fetchNameGenders();\n    });\n  }\n};\n\n// function generateCharacter() {\n//   // let ancestryId = selectedAncestry;\n\n//   // if (useAncestry) {\n//   //   if (selectedAncestry) {\n//   //     setSheetAncestry(selectedAncestry);\n//   //   } else {\n//   //     const ancestryIndex = Math.floor(Math.random() * (availableAncestries.length))\n//   //     ancestryId = availableAncestries[ancestryIndex].id\n//   //     setSheetAncestry(ancestryId);\n//   //   }\n//   // } else {\n//   //   ancestryId = \"none\";\n//   // }\n\n//   // if (selectedClass) {\n//   //   setSheetClass(selectedClass);\n//   // } else {\n//   //   const classIndex = Math.floor(Math.random() * (availableClasses.length))\n//   //   setSheetClass(availableClasses[classIndex].id);\n//   // }\n\n//   // fetchCharacterName(gameSystem, ancestryId, selectedNameGender);\n// }","map":{"version":3,"names":["ref","CharacterGeneratorRoller","components","data","baseUrl","characterName","gameSystem","loading","setup","selectedAncestry","selectedClass","selectedNameGender","sheetAncestry","sheetClass","useAncestry","availableAncestries","availableClasses","availableNameGenders","methods","fetchGameSystem","fetch","method","then","res","json","game_system","fetchAncestries","id","ancestries","fetchClasses","player_classes","fetchNameGenders","gender_options","selectAncestry","ancestryId","selectClass","classId","selectNameGender","genderId","created"],"sources":["/Users/lappy486/Code/pwf-games/src/components/CharacterGenerators/CharacterGeneratorPage.vue"],"sourcesContent":["<template>\n  <div className=\"character-generator-page\">\n    <CharacterGeneratorRoller :availableAncestries=\"availableAncestries\"\n                              :availableClasses=\"availableClasses\"\n                              :availableGenders=\"availableNameGenders\"\n                              :loading=\"loading\"\n                              :systemName=\"gameSystem.name\"\n                              :useAncestry=\"useAncestry\"\n                              @selectAncestry=\"e => selectAncestry(e)\"\n                              @selectClass=\"e => selectClass(e)\"\n                              @selectGender=\"e => selectGender(e)\" />\n    <!-- <CharacterCard :availableAncestries=\"availableAncestries\"\n                   :availableClasses=\"availableClasses\"\n                   :presetCharName=\"characterName\"\n                   :selectedAncestry=\"sheetAncestry\"\n                   :selectedClass=\"sheetClass\"\n                   :useAncestry=\"gameSystem.usesAncestry\" /> -->\n    </div>\n</template>\n\n<script>\n/* eslint-disable */\nimport { ref } from 'vue'\n\n// import { onCreated } from 'vue';\n// import { useRoute } from 'vue-router';\n\n// import CharacterCard from \"../Cards/CharacterCard\";\nimport CharacterGeneratorRoller from \"./CharacterGeneratorRoller\";\n\nexport default {\n  components: {\n    // CharacterCard,\n    CharacterGeneratorRoller\n  },\n  data () {\n    return {\n      baseUrl: 'http://localhost:3000/api/v1/character_generator',\n      characterName: \"\",\n      gameSystem: {},\n      // Want to get key from params, retrieve id, name, uses ancestry\n      loading: true\n    }\n  },\n  setup () {\n    const characterName = \"\";\n    const selectedAncestry = ref(null);\n    const selectedClass = \"\";\n    const selectedNameGender = \"any\";\n    const sheetAncestry = \"\";\n    const sheetClass = \"\";\n    const useAncestry = true; // Reset this later\n\n    const availableAncestries = ref([]);\n    const availableClasses = ref([]);\n    const availableNameGenders = ref([]);\n\n    return {\n      availableAncestries,\n      availableClasses,\n      availableNameGenders,\n      characterName,\n      selectedAncestry,\n      selectedClass,\n      selectedNameGender,\n      sheetAncestry,\n      sheetClass,\n      useAncestry\n    }\n  },\n  methods: {\n    fetchGameSystem () {\n      // Testing w/ 5e, replace\n      return fetch(`${this.baseUrl}/game_system/dnd5e`, {\n        method: 'get'\n      }).then((res) => {\n        return res.json();\n      }).then((res) => {\n        this.gameSystem = res.game_system;\n        this.loading = false;\n      })\n    },\n    fetchAncestries () {\n      fetch(`${this.baseUrl}/ancestries/${this.gameSystem.id}`, {\n        method: 'get'\n      }).then((res) => {\n        return res.json();\n      }).then((res) => {\n        this.availableAncestries = res.ancestries;\n      })\n    },\n    fetchClasses () {\n      fetch(`${this.baseUrl}/player_classes/${this.gameSystem.id}`, {\n        method: 'get'\n      }).then((res) => {\n        return res.json();\n      }).then((res) => {\n        this.availableClasses = res.player_classes;\n      })\n    },\n    fetchNameGenders () {\n      fetch(`${this.baseUrl}/genders`, {\n        method: 'get'\n      }).then((res) => {\n        return res.json();\n      }).then((res) => {\n        this.availableNameGenders = res.gender_options;\n      })\n    },\n    selectAncestry (ancestryId) {\n      this.selectedAncestry = ancestryId;\n    },\n    selectClass (classId) {\n      this.selectedClass = classId;\n    },\n    selectNameGender (genderId) {\n      this.selectedNameGender = genderId;\n    }\n  },\n  created () {\n    this.fetchGameSystem().then(() => {\n      this.fetchAncestries();\n      this.fetchClasses();\n      this.fetchNameGenders();\n    });\n  }\n}\n\n// function generateCharacter() {\n//   // let ancestryId = selectedAncestry;\n  \n//   // if (useAncestry) {\n//   //   if (selectedAncestry) {\n//   //     setSheetAncestry(selectedAncestry);\n//   //   } else {\n//   //     const ancestryIndex = Math.floor(Math.random() * (availableAncestries.length))\n//   //     ancestryId = availableAncestries[ancestryIndex].id\n//   //     setSheetAncestry(ancestryId);\n//   //   }\n//   // } else {\n//   //   ancestryId = \"none\";\n//   // }\n\n//   // if (selectedClass) {\n//   //   setSheetClass(selectedClass);\n//   // } else {\n//   //   const classIndex = Math.floor(Math.random() * (availableClasses.length))\n//   //   setSheetClass(availableClasses[classIndex].id);\n//   // }\n\n//   // fetchCharacterName(gameSystem, ancestryId, selectedNameGender);\n// }\n</script>\n\n<style scoped lang=\"scss\">\n@import \"./CharacterGeneratorPage.scss\";\n</style>"],"mappings":"AAqBA;AACA,SAASA,GAAE,QAAS,KAAI;;AAExB;AACA;;AAEA;AACA,OAAOC,wBAAuB,MAAO,4BAA4B;AAEjE,eAAe;EACbC,UAAU,EAAE;IACV;IACAD;EACF,CAAC;EACDE,IAAGA,CAAA,EAAK;IACN,OAAO;MACLC,OAAO,EAAE,kDAAkD;MAC3DC,aAAa,EAAE,EAAE;MACjBC,UAAU,EAAE,CAAC,CAAC;MACd;MACAC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,KAAIA,CAAA,EAAK;IACP,MAAMH,aAAY,GAAI,EAAE;IACxB,MAAMI,gBAAe,GAAIT,GAAG,CAAC,IAAI,CAAC;IAClC,MAAMU,aAAY,GAAI,EAAE;IACxB,MAAMC,kBAAiB,GAAI,KAAK;IAChC,MAAMC,aAAY,GAAI,EAAE;IACxB,MAAMC,UAAS,GAAI,EAAE;IACrB,MAAMC,WAAU,GAAI,IAAI,EAAE;;IAE1B,MAAMC,mBAAkB,GAAIf,GAAG,CAAC,EAAE,CAAC;IACnC,MAAMgB,gBAAe,GAAIhB,GAAG,CAAC,EAAE,CAAC;IAChC,MAAMiB,oBAAmB,GAAIjB,GAAG,CAAC,EAAE,CAAC;IAEpC,OAAO;MACLe,mBAAmB;MACnBC,gBAAgB;MAChBC,oBAAoB;MACpBZ,aAAa;MACbI,gBAAgB;MAChBC,aAAa;MACbC,kBAAkB;MAClBC,aAAa;MACbC,UAAU;MACVC;IACF;EACF,CAAC;EACDI,OAAO,EAAE;IACPC,eAAcA,CAAA,EAAK;MACjB;MACA,OAAOC,KAAK,CAAE,GAAE,IAAI,CAAChB,OAAQ,oBAAmB,EAAE;QAChDiB,MAAM,EAAE;MACV,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;QACf,OAAOA,GAAG,CAACC,IAAI,CAAC,CAAC;MACnB,CAAC,CAAC,CAACF,IAAI,CAAEC,GAAG,IAAK;QACf,IAAI,CAACjB,UAAS,GAAIiB,GAAG,CAACE,WAAW;QACjC,IAAI,CAAClB,OAAM,GAAI,KAAK;MACtB,CAAC;IACH,CAAC;IACDmB,eAAcA,CAAA,EAAK;MACjBN,KAAK,CAAE,GAAE,IAAI,CAAChB,OAAQ,eAAc,IAAI,CAACE,UAAU,CAACqB,EAAG,EAAC,EAAE;QACxDN,MAAM,EAAE;MACV,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;QACf,OAAOA,GAAG,CAACC,IAAI,CAAC,CAAC;MACnB,CAAC,CAAC,CAACF,IAAI,CAAEC,GAAG,IAAK;QACf,IAAI,CAACR,mBAAkB,GAAIQ,GAAG,CAACK,UAAU;MAC3C,CAAC;IACH,CAAC;IACDC,YAAWA,CAAA,EAAK;MACdT,KAAK,CAAE,GAAE,IAAI,CAAChB,OAAQ,mBAAkB,IAAI,CAACE,UAAU,CAACqB,EAAG,EAAC,EAAE;QAC5DN,MAAM,EAAE;MACV,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;QACf,OAAOA,GAAG,CAACC,IAAI,CAAC,CAAC;MACnB,CAAC,CAAC,CAACF,IAAI,CAAEC,GAAG,IAAK;QACf,IAAI,CAACP,gBAAe,GAAIO,GAAG,CAACO,cAAc;MAC5C,CAAC;IACH,CAAC;IACDC,gBAAeA,CAAA,EAAK;MAClBX,KAAK,CAAE,GAAE,IAAI,CAAChB,OAAQ,UAAS,EAAE;QAC/BiB,MAAM,EAAE;MACV,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;QACf,OAAOA,GAAG,CAACC,IAAI,CAAC,CAAC;MACnB,CAAC,CAAC,CAACF,IAAI,CAAEC,GAAG,IAAK;QACf,IAAI,CAACN,oBAAmB,GAAIM,GAAG,CAACS,cAAc;MAChD,CAAC;IACH,CAAC;IACDC,cAAaA,CAAGC,UAAU,EAAE;MAC1B,IAAI,CAACzB,gBAAe,GAAIyB,UAAU;IACpC,CAAC;IACDC,WAAUA,CAAGC,OAAO,EAAE;MACpB,IAAI,CAAC1B,aAAY,GAAI0B,OAAO;IAC9B,CAAC;IACDC,gBAAeA,CAAGC,QAAQ,EAAE;MAC1B,IAAI,CAAC3B,kBAAiB,GAAI2B,QAAQ;IACpC;EACF,CAAC;EACDC,OAAMA,CAAA,EAAK;IACT,IAAI,CAACpB,eAAe,CAAC,CAAC,CAACG,IAAI,CAAC,MAAM;MAChC,IAAI,CAACI,eAAe,CAAC,CAAC;MACtB,IAAI,CAACG,YAAY,CAAC,CAAC;MACnB,IAAI,CAACE,gBAAgB,CAAC,CAAC;IACzB,CAAC,CAAC;EACJ;AACF;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}